library("DESeq2")
library("pheatmap")
cts <- read.table("../results/tables/all_readCount.tsv", header=TRUE, row.names="gene", check.names=FALSE)
coldata <- read.table(snakemake@params[["sample_table"]], header=TRUE, row.names="sample", check.names=FALSE)
coldata <- read.table("sample_table.tsv", header=TRUE, row.names="sample", check.names=FALSE)
dds <- DESeqDataSetFromMatrix(countData=cts, colData=coldata, design = ~ cell_type + condition + cell_type:condition)
dds
dds <- dds[rowSums(counts(dds)) > 1, ]
dds
dds <- DESeq(dds)
norm_counts <- counts(dds, normalized=TRUE) # raw count normalization
# count transformation, log2 scale, either rlog or vst
vsd <- vst(dds, blind=FALSE)
dim(norm_counts)
dds
resultsNames(dds)
dds
results(dds)
ell_typeCD8Tnn.conditionPre"
?resultsNames
